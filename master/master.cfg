# -*- python -*-
# ex: set syntax=python:

from buildbot.buildslave import BuildSlave
from buildbot.config import BuilderConfig
from buildbot.changes.gitpoller import GitPoller
from buildbot.schedulers.basic import AnyBranchScheduler
from buildbot.schedulers.forcesched import ForceScheduler
from buildbot.changes import filter
from buildbot.process.factory import BuildFactory
from buildbot.steps.source.git import Git
from buildbot.steps.shell import ShellCommand
from buildbot.status import html
from buildbot.status.web import authz, auth
from buildbot.process.properties import Interpolate, Property


COMPONENTS = {
    'yay': {
        'repository': 'git://github.com/isotoma/yay',
        'branch': 'master',
        'workdir': 'build/src/yay',
        },
    'yaybu': {
        'repository': 'git://github.com/isotoma/yaybu',
        'branch': 'master',
        'workdir': 'build/src/yaybu',
        },
    'Yaybu.app': {
        'repository': 'git://github.com/isotoma/Yaybu.app',
        'branch': 'master',
        'workdir': 'build',
        },
    }

OSX_COMPONENTS = ['Yaybu.app', 'yay', 'yaybu']

c = BuildmasterConfig = {}

c['slaves'] = [BuildSlave("osx_slave", "pass")]
c['slavePortnum'] = 9989


def codebaseGenerator(chdict):
    return chdict['project']
c['codebaseGenerator'] = codebaseGenerator


c['change_source'] = []
for project, vcs in COMPONENTS.items():
    c['change_source'].append(GitPoller(
        vcs['repository'],
        project=project,
        branch=vcs['branch'],
        pollinterval=300
        ))


c['schedulers'] = []
c['schedulers'].append(AnyBranchScheduler(
    name="all",
    codebases=COMPONENTS,
    treeStableTimer=None,
    builderNames=["build_osx"],
    ))
c['schedulers'].append(ForceScheduler(
    name="force",
    codebases=COMPONENTS,
    builderNames=["build_osx"],
    ))


factory = BuildFactory()
for comp in OSX_COMPONENTS:
    factory.addStep(Git(
        repourl = COMPONENTS[comp]['repository'],
        mode = 'incremental',
        codebase = comp,
        workdir = COMPONENTS[comp]['workdir'],
        ))
factory.addStep(ShellCommand(
    command = ['./build.sh'],
    ))
factory.addStep(ShellCommand(
    command = ['python/bin/python', 'setup.py', '-b', Property('buildnumber')],
    ))
factory.addStep(ShellCommand(
    command = ['python/bin/python', 'nightlies/upload_nightly.py', Property('buildnumber')],
    ))



c['builders'] = []
c['builders'].append(
    BuilderConfig(
        name="build_osx",
        slavenames=['osx_slave'],
        factory = factory,
        )
    )

c['status'] = []

c['status'].append(html.WebStatus(
    http_port=8080,
    authz=authz.Authz(
        # auth=auth.BasicAuth([("yaybu","yaybu")]),
        gracefulShutdown = False,
        forceBuild = True,
        forceAllBuilds = True,
        pingBuilder = True,
        stopBuild = True,
        stopAllBuilds = True,
        cancelPendingBuild = True,
        ),
    ))

c['title'] = "Yaybu Release Automation"
c['titleURL'] = "https://github.com/yaybu/osx"
c['buildbotURL'] = "http://localhost:8080/"

c['db'] = {
    'db_url' : "sqlite:///state.sqlite",
}

